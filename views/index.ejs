<!DOCTYPE html>
<html>

<head>
    <title>LOGISCHOOL - API</title>
    <style>
        body {
            background: linear-gradient(45deg, #013a58, #016f85);
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            flex-direction: column;
            margin: 0;
            color: white;
            font-family: Arial, sans-serif;
            position: relative;
        }

        /* Animation ic√¥ne API */
        body::before {
            content: "üöö";
            position: absolute;
            top: 35%;
            left: 50%;
            font-size: 50px;
            animation: float 3s ease-in-out infinite;
            transform: translate(-50%, -50%);
        }

        /* Keyframes pour l'animation */
        @keyframes float {
            0% {
                transform: translate(-50%, -50%) translateY(0);
            }
            50% {
                transform: translate(-50%, -50%) translateY(-10px);
            }
            100% {
                transform: translate(-50%, -50%) translateY(0);
            }
        }

        a {
            display: inline-block;
            margin-top: 20px;
            padding: 15px 30px;
            background-color: white;
            color: #0077b6;
            text-decoration: none;
            border-radius: 10px;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

        a:hover {
            background-color: #00b4d8;
            color: white;
        }

        footer {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background-color: rgba(0, 0, 0, 0.4);
            padding: 10px 0;
            text-align: center;
        }

        canvas {
            position: absolute;
            top: 0;
            left: 0;
            z-index: -1;
        }
    </style>
</head>

<body>
    <canvas id="particleCanvas"></canvas>
    <h1>BIENVENUE SUR L'API LOGISHCOOL</h1>
    <a href="/doc"> ‚û°Ô∏è Consulter la documentation</a>
    <footer>
        <p id="footer-text">&copy; Logischool - Tous droits r√©serv√©s</p>
    </footer>
    <script>
        // Ajout de la date dynamique dans le footer
        const footerText = document.getElementById('footer-text');
        const currentDate = new Date();
        const year = currentDate.getFullYear();
        footerText.innerHTML += ` - ${year}`;

        // Gestion des particules
        const canvas = document.getElementById("particleCanvas");
        const ctx = canvas.getContext("2d");
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;

        let particlesArray = [];
        const numberOfParticles = 100;

        const mouse = {
            x: null,
            y: null,
        };

        window.addEventListener("mousemove", function (event) {
            mouse.x = event.x;
            mouse.y = event.y;
        });

        class Particle {
            constructor() {
                this.x = Math.random() * canvas.width;
                this.y = Math.random() * canvas.height;
                this.size = Math.random() * 5 + 1;
                this.speedX = Math.random() * 3 - 1.5;
                this.speedY = Math.random() * 3 - 1.5;
            }

            update() {
                this.x += this.speedX;
                this.y += this.speedY;
                if (this.size > 0.2) this.size -= 0.1;

                // R√©initialiser la particule si elle sort du cadre ou devient trop petite
                if (this.x < 0 || this.x > canvas.width || this.y < 0 || this.y > canvas.height || this.size <= 0.2) {
                    this.x = Math.random() * canvas.width;
                    this.y = Math.random() * canvas.height;
                    this.size = Math.random() * 2 + 1;  
                    this.speedX = Math.random() * 3 - 1.5;
                    this.speedY = Math.random() * 3 - 1.5;
                }
            }


            draw() {
                ctx.fillStyle = "white";
                ctx.strokeStyle = "white";
                ctx.lineWidth = 2;
                ctx.beginPath();
                ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
                ctx.closePath();
                ctx.fill();
            }
        }

        function init() {
            for (let i = 0; i < numberOfParticles; i++) {
                particlesArray.push(new Particle());
            }
        }

        init();

        function animate() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            for (let i = 0; i < particlesArray.length; i++) {
                particlesArray[i].update();
                particlesArray[i].draw();

                if (
                    particlesArray[i].x < mouse.x + 50 &&
                    particlesArray[i].x > mouse.x - 50 &&
                    particlesArray[i].y < mouse.y + 50 &&
                    particlesArray[i].y > mouse.y - 50
                ) {
                    particlesArray[i].x += -3;
                    particlesArray[i].y += -3;
                }
            }
            requestAnimationFrame(animate);
        }

        animate();
    </script>
</body>

</html>
